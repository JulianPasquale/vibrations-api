import { NextFunction, Request, Response } from 'express';
import PatternController from '../../../src/controllers/vibrations/pattern';

import vibrations from '../../mock_files/firestore_vibrations.json';

const vibration = vibrations[0];
const expected_pattern = [54.8780487804878, 18.29268292682927, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 73.17073170731707, 0, 73.17073170731707, 0, 73.17073170731707, 0, 73.17073170731707, 0, 73.17073170731707, 0, 73.17073170731707, 0, 73.17073170731707, 0, 73.17073170731707, 0, 73.17073170731707, 0, 73.17073170731707, 0, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 36.58536585365854, 73.17073170731707, 0, 73.17073170731707, 0, 73.17073170731707, 0, 73.17073170731707, 0, 73.17073170731707, 0, 73.17073170731707, 0, 73.17073170731707, 0, 73.17073170731707, 0, 73.17073170731707, 0]

describe('Test PatternController', () => {
  let mockRequest: Partial<Request>;
  let mockResponse: Partial<Response>;
  let nextFunction: NextFunction = jest.fn();

  it('should respond with expected format', () => {
    mockRequest = {
      params: {
        vibrationId: 'Rxm6NbpolKAF4QY8lHwq',
      },
    };

    mockResponse = {
      send: jest.fn(),
      locals: {
        vibration,
      },
    };

    PatternController(mockRequest as Request, mockResponse as Response, nextFunction);

    expect(mockResponse.send).toBeCalledTimes(1);

    expect(mockResponse.send).toHaveBeenCalledWith(expected_pattern);
  });
});
